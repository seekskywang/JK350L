


ARM Macro Assembler    Page 1 


    1 00000000         ;
    2 00000000         ;*******************************************************
                       *************************************************
    3 00000000         ;                                                uC/OS-I
                       II
    4 00000000         ;                                          The Real-Time
                        Kernel
    5 00000000         ;
    6 00000000         ;
    7 00000000         ;                           (c) Copyright 2009-2016; Mic
                       rium, Inc.; Weston, FL
    8 00000000         ;                    All rights reserved.  Protected by 
                       international copyright laws.
    9 00000000         ;
   10 00000000         ;                                              ARMv7-M P
                       ort
   11 00000000         ;
   12 00000000         ; ÎÄ¼þÃû    : OS_CPU_A.ASM
   13 00000000         ; °æ±¾ºÅ    : V3.06.00
   14 00000000         ; ×÷Õß      : JJL
   15 00000000         ;             BAN
   16 00000000         ;             JBL
   17 00000000         ;
   18 00000000         ; CPU ÄÚºË  : ARMv7M Cortex-M
   19 00000000         ; Ö¸ÁîÄ£Ê½  : Thumb-2 ISA
   20 00000000         ; ¿ª·¢»·¾³  : MDK(KEIL)
   21 00000000         ;
   22 00000000         ; ·­Òë+×¢ÊÍ   : ±ü»ð fire
   23 00000000         ; ÂÛÌ³        : www.firebbs.cn
   24 00000000         ; ÌÔ±¦        : www.fire-stm32.taobao.com
   25 00000000         ;
   26 00000000         ; ×¢Òâ        : (1) ´Ë¶Ë¿ÚÖ§³Ö ARM Cortex-M3¡¢Cortex-M4 
                       ºÍ Cortex-M7 ¼Ü¹¹.
   27 00000000         ;               (2) ÒÔÏÂÓ²¼þ¸¡µãµ¥ÔªÒÑ¾­¹ý²âÊÔ
   28 00000000         ;                  (a) µ¥¾«¶È: FPv4-SP-D16-M ºÍ FPv5-SP-
                       D16-M
   29 00000000         ;                  (b) Ë«¾«¶È: FPv5-D16-M
   30 00000000         ;*******************************************************
                       *************************************************
   31 00000000         ;
   32 00000000         
   33 00000000         ;*******************************************************
                       *************************************************
   34 00000000         ;                                          ¹«¹²º¯Êý
   35 00000000         ;*******************************************************
                       *************************************************
   36 00000000         
   37 00000000         ; IMPORTµÄ×÷ÓÃÊÇÉùÃ÷±êºÅÀ´×ÔÍâ²¿ÎÄ¼þ£¬¸ú C ÓïÑÔÖÐµÄ EXTE
                       RN ¹Ø¼ü×ÖÀàËÆ
   38 00000000         ; Íâ²¿ÒýÓÃ
   39 00000000         
   40 00000000                 IMPORT           OSPrioCur
   41 00000000                 IMPORT           OSPrioHighRdy
   42 00000000                 IMPORT           OSTCBCurPtr
   43 00000000                 IMPORT           OSTCBHighRdyPtr
   44 00000000                 IMPORT           OSIntExit
   45 00000000                 IMPORT           OSTaskSwHook
   46 00000000                 IMPORT           OS_CPU_ExceptStkBase
   47 00000000         



ARM Macro Assembler    Page 2 


   48 00000000         ; EXPORTµÄ×÷ÓÃÊÇÉùÃ÷Ò»¸ö±êºÅ¾ßÓÐÈ«¾ÖÊôÐÔ£¬¿É±»Íâ²¿µÄÎÄ¼þ
                       Ê¹ÓÃ
   49 00000000         ; ±¾ÎÄ¼þº¯ÊýÉùÃ÷
   50 00000000                 EXPORT           OSStartHighRdy
   51 00000000                 EXPORT           OSCtxSw
   52 00000000                 EXPORT           OSIntCtxSw
   53 00000000                 EXPORT           OS_CPU_PendSVHandler
   54 00000000         
   55 00000000         ; ÊÇ·ñÊ¹ÓÃÓ²¼þ¸¡µã
   56 00000000                 IF               {FPU} != "SoftVFP"
   57 00000000                 EXPORT           OS_CPU_FP_Reg_Push
   58 00000000                 EXPORT           OS_CPU_FP_Reg_Pop
   59 00000000                 ENDIF
   60 00000000         
   61 00000000         
   62 00000000         ;*******************************************************
                       *************************************************
   63 00000000         ;                                               ³£Á¿¶¨Òå
                       
   64 00000000         ;*******************************************************
                       *************************************************
   65 00000000         
   66 00000000 E000ED04 
                       NVIC_INT_CTRL
                               EQU              0xE000ED04  ; ÖÐ¶Ï¿ØÖÆ×´Ì¬¼Ä´æÆ
                                                            ÷
   67 00000000 E000ED22 
                       NVIC_SYSPRI14
                               EQU              0xE000ED22  ; ÏµÍ³ÓÅÏÈ¼¶¼Ä´æÆ÷ 
                                                            (ÓÅÏÈ¼¶14)
   68 00000000 000000FF 
                       NVIC_PENDSV_PRI
                               EQU              0xFF        ; PendSVµÄÓÅÏÈ¼¶ (×
                                                            îµÍÓÅÏÈ¼¶)
   69 00000000 10000000 
                       NVIC_PENDSVSET
                               EQU              0x10000000  ; ´¥·¢PendSVÒì³£µÄÖ
                                                            µ
   70 00000000         
   71 00000000         
   72 00000000         ;*******************************************************
                       *************************************************
   73 00000000         ;                                              ´úÂëÉú³ÉÖ
                       ¸Áî
   74 00000000         ;*******************************************************
                       *************************************************
   75 00000000         
   76 00000000                 PRESERVE8                    ; 8×Ö½Ú¶ÔÆë
   77 00000000                 THUMB                        ; THUMB Ö¸ÁîÄ£Ê½
   78 00000000         
   79 00000000         ; ÓÃAREAÎ±Ö¸Áî »ã±àÒ»¸ö´úÂë¶Î£¬Ãû×ÖÎªCODE£¨µÚÒ»¸ö£©£¬ÊôÐ
                       ÔÎªÖ»¶Á
   80 00000000                 AREA             CODE, CODE, READONLY
   81 00000000         
   82 00000000         
   83 00000000         ;*******************************************************
                       *************************************************
   84 00000000         ;                                   ¸¡µã¼Ä´æÆ÷ÈëÕ»
   85 00000000         ;                             void  OS_CPU_FP_Reg_Push (



ARM Macro Assembler    Page 3 


                       CPU_STK  *stkPtr)
   86 00000000         ;
   87 00000000         ;×¢Òâ : 1) ´Ëº¯Êý±£´æ¸¡µãµ¥ÔªµÄ¼Ä´æÆ÷S16-S31 ¡£
   88 00000000         ;
   89 00000000         ;       2) Î±´úÂëÈçÏÂ:
   90 00000000         ;          a) ÔÚ½ø³Ì¶ÑÕ»ÈëÕ»¸¡µãµ¥ÔªµÄ¼Ä´æÆ÷S16-S31£»
   91 00000000         ;          b) ¸üÐÂÈÎÎñ¿ØÖÆÆ÷µÄ¶ÑÕ» OSTCBCurPtr->StkPtrÖ¸
                       Õë;
   92 00000000         ;*******************************************************
                       *************************************************
   93 00000000         
   94 00000000                 IF               {FPU} != "SoftVFP"
   95 00000000         
   96 00000000         OS_CPU_FP_Reg_Push
   97 00000000 F3EF 8109       MRS              R1, PSP     ; PSPÊÇ½ø³Ì¶ÑÕ»Ö¸Õë
                                                            
   98 00000004 B121            CBZ              R1, OS_CPU_FP_nosave ; Ìø¹ýFPU¼
                                                            Ä´æÆ÷µÚÒ»´Î±£´æ
   99 00000006         
  100 00000006 ED20 8A10       VSTMDB           R0!, {S16-S31}
  101 0000000A 493C            LDR              R1, =OSTCBCurPtr
  102 0000000C 680A            LDR              R2, [R1]
  103 0000000E 6010            STR              R0, [R2]
  104 00000010         OS_CPU_FP_nosave
  105 00000010 4770            BX               LR
  106 00000012         
  107 00000012                 ENDIF
  108 00000012         
  109 00000012         
  110 00000012         ;*******************************************************
                       *************************************************
  111 00000012         ;                                   ¸¡µã¼Ä´æÆ÷³öÕ»
  112 00000012         ;                             void  OS_CPU_FP_Reg_Pop (C
                       PU_STK  *stkPtr)
  113 00000012         ;
  114 00000012         ; Note(s) : 1) ´Ëº¯Êý»Ö¸´¸¡µãµ¥ÔªµÄ¼Ä´æÆ÷S16-S31 ¡£
  115 00000012         ;
  116 00000012         ;           2) Î±´úÂëÈçÏÂ:
  117 00000012         ;              a) »Ö¸´ÐÂ¹ý³Ì¶ÑÕ»µÄ¸¡µãµ¥ÔªµÄ¼Ä´æÆ÷S16-S3
                       1;
  118 00000012         ;              b) ¸üÐÂÐÂ½ø³Ì¶ÑÕ»µÄOSTCBHighRdyPtr-> StkP
                       trÖ¸Õë;
  119 00000012         ;*******************************************************
                       *************************************************
  120 00000012         
  121 00000012                 IF               {FPU} != "SoftVFP"
  122 00000012         
  123 00000012         OS_CPU_FP_Reg_Pop
  124 00000012 ECB0 8A10       VLDMIA           R0!, {S16-S31}
  125 00000016 493A            LDR              R1, =OSTCBHighRdyPtr
  126 00000018 680A            LDR              R2, [R1]
  127 0000001A 6010            STR              R0, [R2]
  128 0000001C 4770            BX               LR
  129 0000001E         
  130 0000001E                 ENDIF
  131 0000001E         
  132 0000001E         
  133 0000001E         ;*******************************************************
                       *************************************************



ARM Macro Assembler    Page 4 


  134 0000001E         ;                                         ¿ªÊ¼¶àÈÎÎñ
  135 0000001E         ;                                      void OSStartHighR
                       dy(void)
  136 0000001E         ;
  137 0000001E         ; ×¢Òâ:     1) ´Ëº¯Êý´¥·¢PendSVÒì³££¨ÊµÖÊÉÏ£¬µ¼ÖÂÉÏÏÂÎÄÇ
                       Ð»»£©µ¼ÖÂµÚÒ»¸öÈÎÎñ¿ªÊ¼
  138 0000001E         ;
  139 0000001E         ;           2) ÔÚÈÎÎñÖ´ÐÐÆÚ¼ä£¬PSPÓÃ×÷¶ÑÕ»Ö¸Õë.
  140 0000001E         ;              µ±·¢ÉúÒì³£Ê±£¬ºËÐÄ½«ÇÐ»»µ½MSP£¬Ö±µ½Òì³£·µ
                       »Ø
  141 0000001E         ;
  142 0000001E         ;           3) OSStartHighRdy() ±ØÐë£º
  143 0000001E         ;              a) ½«PendSVÒì³£ÓÅÏÈ¼¶ÉèÖÃÎª×îµÍ£»
  144 0000001E         ;              b) ³õÊ¼»¯½ø³Ì¶ÑÕ»Ö¸ÕëPSPµÈÓÚ0, ±íÃ÷ÕâÊÇµÚ
                       Ò»´ÎÉÏÏÂÎÄÇÐ»»£»
  145 0000001E         ;              c) ÉèÖÃÖ÷¶ÑÕ»Ö¸ÕëµÈÓÚOS_CPU_ExceptStkBase
                       £»
  146 0000001E         ;              d) »ñÈ¡µ±Ç°µÄ¸ßÓÅÏÈ¼¶, OSPrioCur = OSPrio
                       HighRdy£»
  147 0000001E         ;              e) »ñÈ¡µ±Ç°¾ÍÐ÷µÄÏß³Ì TCB, OSTCBCurPtr = 
                       OSTCBHighRdyPtr£»
  148 0000001E         ;              f) ´ÓTCB»ñÈ¡ÐÂ½ø³Ì¶ÑÕ»Ö¸ÕëSP, SP = OSTCBH
                       ighRdyPtr->StkPtr£»
  149 0000001E         ;              g) ´ÓÐÂµÄ½ø³Ì¶ÑÕ»»Ö¸´R4--R11ºÍR14¼Ä´æÆ÷£»
                       
  150 0000001E         ;              h) Ê¹ÄÜÖÐ¶Ï £¨ÈÎÎñ½«ÔÚÆôÓÃÖÐ¶ÏºóÔËÐÐ£©¡£
  151 0000001E         ;*******************************************************
                       *************************************************
  152 0000001E         
  153 0000001E         OSStartHighRdy
  154 0000001E B672            CPSID            I           ; ¹ØÖÐ¶Ï£¬·ÀÖ¹ÖÐ¶ÏÆ
                                                            Ú¼äµÄÉÏÏÂÎÄÇÐ»»
  155 00000020 F64E 5022 
              F2CE 0000        MOV32            R0, NVIC_SYSPRI14 ; ÉèÖÃ PendSV
                                                             Òì³£ÓÅÏÈ¼¶
  156 00000028 F240 01FF 
              F2C0 0100        MOV32            R1, NVIC_PENDSV_PRI
  157 00000030 7001            STRB             R1, [R0]
  158 00000032         
  159 00000032 2000            MOVS             R0, #0      ; ³õÊ¼»¯½ø³Ì¶ÑÕ»Ö¸Õ
                                                            ëPSPµÈÓÚ0,ÔÚ³õÊ¼ÉÏÏ
                                                            ÂÎÄÇÐ»»Ê±µ÷ÓÃ
  160 00000034 F380 8809       MSR              PSP, R0
  161 00000038         
  162 00000038 F240 0000 
              F2C0 0000        MOV32            R0, OS_CPU_ExceptStkBase ; ÉèÖÃ
                                                            Ö÷¶ÑÕ»Ö¸ÕëµÈÓÚOS_CP
                                                            U_ExceptStkBase
  163 00000040 6801            LDR              R1, [R0]
  164 00000042 F381 8808       MSR              MSP, R1
  165 00000046         
  166 00000046 F7FF FFFE       BL               OSTaskSwHook ; µ÷ÓÃOSTaskSwHook
                                                            ()º¯ÊýÎª¸¡µãµ¥ÔªÈëÕ
                                                            »ºÍ³öÕ»
  167 0000004A         
  168 0000004A F240 0000 
              F2C0 0000        MOV32            R0, OSPrioCur ; OSPrioCur   = O
                                                            SPrioHighRdy;
  169 00000052 F240 0100 



ARM Macro Assembler    Page 5 


              F2C0 0100        MOV32            R1, OSPrioHighRdy
  170 0000005A 780A            LDRB             R2, [R1]
  171 0000005C 7002            STRB             R2, [R0]
  172 0000005E         
  173 0000005E F240 0000 
              F2C0 0000        MOV32            R0, OSTCBCurPtr ; OSTCBCurPtr =
                                                             OSTCBHighRdyPtr;
  174 00000066 F240 0100 
              F2C0 0100        MOV32            R1, OSTCBHighRdyPtr
  175 0000006E 680A            LDR              R2, [R1]
  176 00000070 6002            STR              R2, [R0]
  177 00000072         
  178 00000072 6810            LDR              R0, [R2]    ; R0ÎªÐÂ½ø³Ì¶ÑÕ»Ö¸Õ
                                                            ë; SP = OSTCBHighRd
                                                            yPtr->StkPtr;
  179 00000074 F380 8809       MSR              PSP, R0     ; ´ÓÐÂ½ø³Ì¶ÑÕ»Ö¸Õë¼
                                                            ÓÔØPSP
  180 00000078         
  181 00000078 F3EF 8014       MRS              R0, CONTROL
  182 0000007C F040 0002       ORR              R0, R0, #2
  183 00000080 F380 8814       MSR              CONTROL, R0
  184 00000084 F3BF 8F6F       ISB                          ; Í¬²½Ö¸ÁîÁ÷
  185 00000088         
  186 00000088 E8BD 4FF0       LDMFD            SP!, {R4-R11, LR} ; ÔÚÐÂ½ø³Ì¶ÑÕ
                                                            »ÖÐ±£´æ r4-11, lr 
  187 0000008C BC0F            LDMFD            SP!, {R0-R3} ; ±£´æ¼Ä´æÆ÷r0, r3
                                                            
  188 0000008E E8BD 5000       LDMFD            SP!, {R12, LR} ; ¼ÓÔØR12 ºÍ LR
  189 00000092 BC06            LDMFD            SP!, {R1, R2} ; ¼ÓÔØ PC and ½ûÖ
                                                            ¹ xPSR
  190 00000094 B662            CPSIE            I
  191 00000096 4708            BX               R1
  192 00000098         
  193 00000098         
  194 00000098         ;*******************************************************
                       *************************************************
  195 00000098         ;                       Ö´ÐÐÉÏÏÂÎÄÇÐ»» (´ÓÈÎÎñ¼¶±ð) - OS
                       CtxSw()
  196 00000098         ;
  197 00000098         ; Note(s) : 1) µ±²Ù×÷ÏµÍ³ÏëÒªÖ´ÐÐµÄÈÎÎñµÄÉÏÏÂÎÄÇÐ»»Ê±£¬µ
                       ÷ÓÃOSCtxSw()º¯Êý¡£´Ëº¯Êý´¥·¢ÊÇÕæÕýµÄ¹¤×÷ÔÚÄÄÀï×öµÄ PendS
                       V Òì³£.
  198 00000098         ;*******************************************************
                       *************************************************
  199 00000098         
  200 00000098         OSCtxSw
  201 00000098 481A            LDR              R0, =NVIC_INT_CTRL ; ´¥·¢ PendS
                                                            V Òì³£ £¨ÒýÆðÉÏÏÂÎÄ
                                                            ÇÐ»»£©
  202 0000009A F04F 5180       LDR              R1, =NVIC_PENDSVSET
  203 0000009E 6001            STR              R1, [R0]
  204 000000A0 4770            BX               LR
  205 000000A2         
  206 000000A2         
  207 000000A2         ;*******************************************************
                       *************************************************
  208 000000A2         ;                   Ö´ÐÐÉÏÏÂÎÄÇÐ»» (´ÓÖÐ¶Ï¼¶±ð) - OSIntC
                       txSw()
  209 000000A2         ;



ARM Macro Assembler    Page 6 


  210 000000A2         ; ×¢Òâ : 1) OSIntCtxSw()º¯ÊýÓÉOSIntExit()µ÷ÓÃ£¬µ±Ëü¾ö¶¨É
                       ÏÏÂÎÄÇÐ»»Ê±ÐèÒª×÷ÎªÒ»¸öÖÐ¶ÏµÄ½á¹û¡£
  211 000000A2         ;           ´Ëº¯ÊýÖ»ÊÇÔÚÃ»ÓÐÆäËûµÄÖÐ¶ÏÔ´ºÍÖÐ¶ÏÆôÓÃÊ±´¥·¢
                       PendSV Òì³£²¢±»´¦Àí¡£
  212 000000A2         ;*******************************************************
                       *************************************************
  213 000000A2         
  214 000000A2         OSIntCtxSw
  215 000000A2 4818            LDR              R0, =NVIC_INT_CTRL ; ´¥·¢ PendS
                                                            V Òì³£ £¨ÒýÆðÉÏÏÂÎÄ
                                                            ÇÐ»»£©
  216 000000A4 F04F 5180       LDR              R1, =NVIC_PENDSVSET
  217 000000A8 6001            STR              R1, [R0]
  218 000000AA 4770            BX               LR
  219 000000AC         
  220 000000AC         
  221 000000AC         ;*******************************************************
                       *************************************************
  222 000000AC         ;                                       PendSV Òì³£·þÎñº
                       ¯Êý
  223 000000AC         ;                                   void OS_CPU_PendSVHa
                       ndler(void)
  224 000000AC         ;
  225 000000AC         ; ×¢Òâ    : 1) PendSVÓÃÓÚÒýÆðÉÏÏÂÎÄÇÐ»»¡£ÕâÊÇCortex-MÖ´Ð
                       ÐÉÏÏÂÎÄÇÐ»»µÄÍÆ¼ö·½·¨¡£ÕâÊÇÒòÎªCortex-MÔÚÈÎºÎÒì³£·¢ÉúÊ±×
                       Ô¶¯±£´æ´¦ÀíÆ÷ÉÏÏÂÎÄµÄÒ»°ë, 
  226 000000AC         ;              ²¢ÔÚÒì³£·µ»ØÊ±»Ö¸´Ô­Ñù¡£ËùÒÔÖ»ÐèÒª±£´æ¹Ì¶
                       ¨µÄ¼Ä´æÆ÷R4--R11ºÍR14¡£Ê¹ÓÃPendSVÒì³£ÕâÖÖ·½Ê½ÒâÎ¶×ÅÉÏÏÂÎ
                       Ä±£´æºÍ»Ö¸´ÊÇÏàÍ¬µÄ
  227 000000AC         ;              ÎÞÂÛËü´ÓÒ»¸öÏß³ÌÆô¶¯»¹ÊÇ·¢ÉúÖÐ¶Ï»òÒì³£¡£
  228 000000AC         ;
  229 000000AC         ;           2) Î±´úÂëÈçÏÂ:
  230 000000AC         ;              a) »ñÈ¡½ø³Ì¶ÑÕ»Ö¸Õë£»
  231 000000AC         ;              b) ÔÚ½ø³Ì¶ÑÕ»±£´æÊ£Óà¼Ä´æÆ÷R4--R11ºÍR14£»
                       
  232 000000AC         ;              c) ÔÚÈÎÎñ¿ØÖÆ¿éÖÐ±£´æ½ø³Ì¶ÑÕ»Ö¸Õë, OSTCBC
                       urPtr->OSTCBStkPtr = SP£»
  233 000000AC         ;              d) µ÷ÓÃOSTaskSwHook()º¯Êý£»
  234 000000AC         ;              e) »ñÈ¡µ±Ç°µÄ¸ßÓÅÏÈ¼¶, OSPrioCur = OSPrio
                       HighRdy£»
  235 000000AC         ;              f) »ñÈ¡µ±Ç°¾ÍÐ÷µÄÏß³Ì TCB, OSTCBCurPtr = 
                       OSTCBHighRdyPtr£»
  236 000000AC         ;              g) ´ÓTCB»ñÈ¡ÐÂµÄ½ø³ÌÖ¸ÕëSP(PSP), SP = OST
                       CBHighRdyPtr->OSTCBStkPtr£»
  237 000000AC         ;              h) ´ÓÐÂµÄ½ø³Ì¶ÑÕ»»Ö¸´¼Ä´æÆ÷R4--R11ºÍR14£»
                       
  238 000000AC         ;              i) Ö´ÐÐÒì³£·µ»Ø£¬½«»Ö¸´ÆäÓàÉÏÏÂÎÄ.
  239 000000AC         ;
  240 000000AC         ;           3) ÔÚ½øÈë PendSV Òì³£µÄÊ±ºò:
  241 000000AC         ;              a) ÏÂÃæ8¸ö¼Ä´æÆ÷ÓÉ´¦ÀíÆ÷×Ô¶¯Ñ¹Õ»:
  242 000000AC         ;                 xPSR, PC, LR, R12, R0-R3
  243 000000AC         ;              b) ´¦ÀíÆ÷Ä£Ê½ÓÉÓÃ»§¼¶±ä³ÉÌØÈ¨¼¶
  244 000000AC         ;              c) ¶ÑÕ»ÓÉPSPÇÐ»»³ÉMSP
  245 000000AC         ;              d) OSTCBCurPtr      points to the OS_TCB 
                       of the task to suspend
  246 000000AC         ;                 OSTCBHighRdyPtr  points to the OS_TCB 
                       of the task to resume
  247 000000AC         ;
  248 000000AC         ;           4) ÒòÎªPendSVµÄÓÅÏÈ¼¶×îµÍ(ÓÉÉÏÃæµÄOSStartHig



ARM Macro Assembler    Page 7 


                       hRdy()º¯ÊýÊµÏÖ),ËùÒÔPendSVÒì³£·þÎñº¯ÊýÖ»ÓÐÔÚÃ»ÓÐÆäËû
  249 000000AC         ;              µÄÒì³£ºÍÖÐ¶Ï»îÔ¾Ê±²Å»áÖ´ÐÐ£¬Òò´Ë¿ÉÒÔÓÐ°ÑÎ
                       ÕµØÍÆ²â±»ÇÐ»»³öµÄÉÏÏÂÎÄÊ¹ÓÃµÄÊÇ½ø³Ì¶ÑÕ» (PSP)¡£
  250 000000AC         ;*******************************************************
                       *************************************************
  251 000000AC         
  252 000000AC         OS_CPU_PendSVHandler
  253 000000AC B672            CPSID            I           ; ¹ØÖÐ¶Ï£¬·ÀÖ¹ÖÐ¶ÏÆ
                                                            Ú¼äµÄÉÏÏÂÎÄÇÐ»»
  254 000000AE F3EF 8009       MRS              R0, PSP     ; ¼ÓÔØPSP(¼´R13)µÄÖ
                                                            µµ½R0
  255 000000B2 E920 4FF0       STMFD            R0!, {R4-R11, R14} ; ÔÚ½ø³Ì¶ÑÕ»
                                                            ÖÐ±£´æÊ£Óà¼Ä´æÆ÷r4-
                                                            11, R14
  256 000000B6         
  257 000000B6 F240 0500 
              F2C0 0500        MOV32            R5, OSTCBCurPtr ; OSTCBCurPtr->
                                                            StkPtr = SP;
  258 000000BE 6829            LDR              R1, [R5]
  259 000000C0 6008            STR              R0, [R1]    ; R0 is SP of proce
                                                            ss being switched o
                                                            ut
  260 000000C2         
  261 000000C2         ; ÔÚÕâÀï£¬Õû¸öÉÏÏÂÎÄµÄ¹ý³ÌÒÑ±£´æ
  262 000000C2 4674            MOV              R4, LR      ; ±£´æLR exc_return
                                                            Öµ
  263 000000C4 F7FF FFFE       BL               OSTaskSwHook ; µ÷ÓÃOSTaskSwHook
                                                            ()º¯ÊýÎª¸¡µãµ¥ÔªÈëÕ
                                                            »ºÍ³öÕ»
  264 000000C8         
  265 000000C8 F240 0000 
              F2C0 0000        MOV32            R0, OSPrioCur ; OSPrioCur   = O
                                                            SPrioHighRdy;
  266 000000D0 F240 0100 
              F2C0 0100        MOV32            R1, OSPrioHighRdy
  267 000000D8 780A            LDRB             R2, [R1]
  268 000000DA 7002            STRB             R2, [R0]
  269 000000DC         
  270 000000DC F240 0100 
              F2C0 0100        MOV32            R1, OSTCBHighRdyPtr ; OSTCBCurP
                                                            tr = OSTCBHighRdyPt
                                                            r;
  271 000000E4 680A            LDR              R2, [R1]
  272 000000E6 602A            STR              R2, [R5]
  273 000000E8         
  274 000000E8 F044 0E04       ORR              LR,  R4, #0x04 ; È·±£·µ»ØµÄÒì³£
                                                            Ê¹ÓÃ½ø³Ì¶ÑÕ»
  275 000000EC 6810            LDR              R0,  [R2]   ; R0ÐÂ½ø³Ì¶ÑÕ»Ö¸Õë;
                                                             SP = OSTCBHighRdyP
                                                            tr->StkPtr;
  276 000000EE E8B0 4FF0       LDMFD            R0!, {R4-R11, R14} ; ´ÓÐÂ½ø³Ì¶Ñ
                                                            Õ»ÖÐ»Ö¸´¼Ä´æÆ÷R4-11
                                                            , R14µÄÖµ
  277 000000F2 F380 8809       MSR              PSP, R0     ; ´ÓÐÂ½ø³Ì¶ÑÕ»ÖÐ¼ÓÔ
                                                            ØPSP
  278 000000F6 B662            CPSIE            I
  279 000000F8 4770            BX               LR          ; Òì³£·µ»ØÊ±½«»Ö¸´Ê
                                                            £ÓàµÄÉÏÏÂÎÄ
  280 000000FA         



ARM Macro Assembler    Page 8 


  281 000000FA 00 00           ALIGN
  282 000000FC         
  283 000000FC                 END
              00000000 
              00000000 
              E000ED04 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M7.fp.dp --apcs=
interwork --depend=..\..\output\os_cpu_a.d -o..\..\output\os_cpu_a.o -I.\RTE\__
_COS-III -ID:\Keil_v5\ARM\PACK\Keil\STM32F7xx_DFP\2.13.0\Drivers\CMSIS\Device\S
T\STM32F7xx\Include -IE:\Keil_v5\ARM\CMSIS\Include --predefine="__MICROLIB SETA
 1" --predefine="__UVISION_VERSION SETA 525" --predefine="STM32F767xx SETA 1" -
-list=..\..\listing\os_cpu_a.lst ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M
\RealView\os_cpu_a.asm



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CODE 00000000

Symbol: CODE
   Definitions
      At line 80 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVie
w\os_cpu_a.asm
   Uses
      None
Comment: CODE unused
OSCtxSw 00000098

Symbol: OSCtxSw
   Definitions
      At line 200 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVi
ew\os_cpu_a.asm
   Uses
      At line 51 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVie
w\os_cpu_a.asm
Comment: OSCtxSw used once
OSIntCtxSw 000000A2

Symbol: OSIntCtxSw
   Definitions
      At line 214 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVi
ew\os_cpu_a.asm
   Uses
      At line 52 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVie
w\os_cpu_a.asm
Comment: OSIntCtxSw used once
OSStartHighRdy 0000001E

Symbol: OSStartHighRdy
   Definitions
      At line 153 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVi
ew\os_cpu_a.asm
   Uses
      At line 50 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVie
w\os_cpu_a.asm
Comment: OSStartHighRdy used once
OS_CPU_FP_Reg_Pop 00000012

Symbol: OS_CPU_FP_Reg_Pop
   Definitions
      At line 123 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVi
ew\os_cpu_a.asm
   Uses
      At line 58 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVie
w\os_cpu_a.asm
Comment: OS_CPU_FP_Reg_Pop used once
OS_CPU_FP_Reg_Push 00000000

Symbol: OS_CPU_FP_Reg_Push
   Definitions
      At line 96 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVie
w\os_cpu_a.asm
   Uses
      At line 57 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVie
w\os_cpu_a.asm
Comment: OS_CPU_FP_Reg_Push used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

OS_CPU_FP_nosave 00000010

Symbol: OS_CPU_FP_nosave
   Definitions
      At line 104 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVi
ew\os_cpu_a.asm
   Uses
      At line 98 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVie
w\os_cpu_a.asm
Comment: OS_CPU_FP_nosave used once
OS_CPU_PendSVHandler 000000AC

Symbol: OS_CPU_PendSVHandler
   Definitions
      At line 252 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVi
ew\os_cpu_a.asm
   Uses
      At line 53 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVie
w\os_cpu_a.asm
Comment: OS_CPU_PendSVHandler used once
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

NVIC_INT_CTRL E000ED04

Symbol: NVIC_INT_CTRL
   Definitions
      At line 66 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVie
w\os_cpu_a.asm
   Uses
      At line 201 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVi
ew\os_cpu_a.asm
      At line 215 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVi
ew\os_cpu_a.asm

NVIC_PENDSVSET 10000000

Symbol: NVIC_PENDSVSET
   Definitions
      At line 69 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVie
w\os_cpu_a.asm
   Uses
      At line 202 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVi
ew\os_cpu_a.asm
      At line 216 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVi
ew\os_cpu_a.asm

NVIC_PENDSV_PRI 000000FF

Symbol: NVIC_PENDSV_PRI
   Definitions
      At line 68 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVie
w\os_cpu_a.asm
   Uses
      At line 156 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVi
ew\os_cpu_a.asm
Comment: NVIC_PENDSV_PRI used once
NVIC_SYSPRI14 E000ED22

Symbol: NVIC_SYSPRI14
   Definitions
      At line 67 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVie
w\os_cpu_a.asm
   Uses
      At line 155 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVi
ew\os_cpu_a.asm
Comment: NVIC_SYSPRI14 used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

OSIntExit 00000000

Symbol: OSIntExit
   Definitions
      At line 44 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVie
w\os_cpu_a.asm
   Uses
      None
Comment: OSIntExit unused
OSPrioCur 00000000

Symbol: OSPrioCur
   Definitions
      At line 40 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVie
w\os_cpu_a.asm
   Uses
      At line 168 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVi
ew\os_cpu_a.asm
      At line 265 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVi
ew\os_cpu_a.asm

OSPrioHighRdy 00000000

Symbol: OSPrioHighRdy
   Definitions
      At line 41 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVie
w\os_cpu_a.asm
   Uses
      At line 169 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVi
ew\os_cpu_a.asm
      At line 266 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVi
ew\os_cpu_a.asm

OSTCBCurPtr 00000000

Symbol: OSTCBCurPtr
   Definitions
      At line 42 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVie
w\os_cpu_a.asm
   Uses
      At line 101 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVi
ew\os_cpu_a.asm
      At line 173 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVi
ew\os_cpu_a.asm
      At line 257 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVi
ew\os_cpu_a.asm

OSTCBHighRdyPtr 00000000

Symbol: OSTCBHighRdyPtr
   Definitions
      At line 43 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVie
w\os_cpu_a.asm
   Uses
      At line 125 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVi
ew\os_cpu_a.asm
      At line 174 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVi
ew\os_cpu_a.asm
      At line 270 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVi



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

ew\os_cpu_a.asm

OSTaskSwHook 00000000

Symbol: OSTaskSwHook
   Definitions
      At line 45 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVie
w\os_cpu_a.asm
   Uses
      At line 166 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVi
ew\os_cpu_a.asm
      At line 263 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVi
ew\os_cpu_a.asm

OS_CPU_ExceptStkBase 00000000

Symbol: OS_CPU_ExceptStkBase
   Definitions
      At line 46 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVie
w\os_cpu_a.asm
   Uses
      At line 162 in file ..\..\User\uCOS-III\Ports\ARM-Cortex-M\ARMv7-M\RealVi
ew\os_cpu_a.asm
Comment: OS_CPU_ExceptStkBase used once
7 symbols
355 symbols in table
